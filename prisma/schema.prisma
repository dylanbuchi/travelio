// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String? @unique
  password String?

  profileImage String?

  emailVerifiedAt DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  favorites String[] @db.ObjectId

  accounts     Account[]
  listings     Listing[]
  reservations Reservation[]
}

model Account {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  type              String
  provider          String
  providerAccountID String
  refreshToken      String? @db.String
  accessToken       String? @db.String

  expiresAt Int?
  tokenType String?
  scope     String?
  tokenId   String? @db.String
  session   String?

  @@unique([provider, providerAccountID])
}

model Listing {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  title       String
  description String
  image       String

  location String
  category String

  price         Int
  roomCount     Int
  bathroomCount Int
  guestCount    Int

  reservations Reservation[]
  createdAt    DateTime      @default(now())
}

model Reservation {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId String  @db.ObjectId

  startDate DateTime
  endDate   DateTime
  createdAt DateTime

  totalPrice Int
}
